name: Deploy to Amazon EC2

on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION: us-east-1             # set this to your preferred AWS region, e.g. us-west-1

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Copy SSH private key to EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: SSH onto EC2, stop and remove any existing containers, build and run new container
      run: |
        ssh -o "StrictHostKeyChecking=no" ubuntu@18.206.161.186 "mkdir -p /app"
        rsync -avz -e "ssh -o StrictHostKeyChecking=no" --exclude=".git" Dockerfile ubuntu@18.206.161.186:/app
        ssh -o "StrictHostKeyChecking=no" ubuntu@18.206.161.186 "docker stop $(docker ps -a -q)"
        ssh -o "StrictHostKeyChecking=no" ubuntu@18.206.161.186 "docker rm -f $(docker ps -a -q)"
        ssh -o "StrictHostKeyChecking=no" ubuntu@18.206.161.186 "cd /app && docker build -t hiadithere/youtube-sentiment-analysis:latest . --no-cache"
        ssh -o "StrictHostKeyChecking=no" ubuntu@18.206.161.186 "cd /app && docker run -d -p 3000:3000 -e  AWS_ACCESS_KEY_ID= ${{ secrets.AWS_ACCESS_KEY_ID }} -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -e AWS_DEFAULT_REGION=${{ env.AWS_REGION }} hiadithere/youtube-sentiment-analysis:latest"